name    = XML-Rabbit
author  = Robin Smidsrød <robin@smidsrod.no>
license = Perl_5
copyright_holder = Robin Smidsrød

;Semantic versioning, see http://semver.org/
version = 0.4.1

[NextRelease]
[@Git]

[@Filter]
-bundle = @Basic
-remove = Readme
-remove = MakeMaker

; We need to bail out when we encounter incompatible libxml2 versions
; See http://www.cpantesters.org/cpan/report/07429432-b19f-3f77-b713-d32bba55d77f for details
[MakeMaker::Awesome]
header = use XML::LibXML 1.70;
header = my $libxml_version = XML::LibXML::LIBXML_RUNTIME_VERSION;
header = print "Detected LibXML version: $libxml_version\n";
header = die("Unsupported version of LibXML detected.\n") if $libxml_version == 20616;

[MetaJSON]
[PkgVersion]
[PodWeaver]

[MetaResources]
repository.url  = git://github.com/robinsmidsrod/XML-Rabbit.git
repository.web  = http://github.com/robinsmidsrod/XML-Rabbit
repository.type = git
bugtracker.web  = http://github.com/robinsmidsrod/XML-Rabbit/issues

[InstallGuide]
[ReadmeFromPod]
[ReadmeMarkdownFromPod]
[CopyFilesFromBuild]
move = README.mkdn

; The default :TestFiles file finder also includes files in t/data,
; let's ignore all of those
[FileFinder::ByName / MyTestFiles]
dir  = t   ; look in the t/ directory
file = *.t ; for .t files

[PodSyntaxTests]
[PodCoverageTests]
[Test::Perl::Critic]
critic_config = xt/author/perlcritic.rc
[Test::Kwalitee]
[Test::NoTabs]
finder = :InstallModules
finder = :ExecFiles
finder = MyTestFiles
[Test::EOL]
finder = :InstallModules
finer  = :ExecFiles
finder = MyTestFiles

;Need to get my signing stuff setup properly...
;[Signature]

[AutoPrereqs]

[Prereqs / ConfigureRequires]
XML::LibXML = 1.70 ; Required for libxml2 runtime version check

; authordep Dist::Zilla::Plugin::MakeMaker::Awesome
; authordep Pod::Weaver::Section::Support
; authordep Pod::Weaver::Plugin::SingleEncoding
; authordep Pod::Elemental::Transformer::List
; authordep Test::Pod::Coverage
; authordep Pod::Coverage::TrustPod
; authordep Test::Perl::Critic
; authordep Perl::Critic::Policy::Lax::RequireExplicitPackage::ExceptForPragmata
